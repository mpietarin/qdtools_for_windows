// ======================================================================
/*!
 * \file
 * \brief A simple test to show that the CorrectLocalTime method works
 *
 * The program prints
 * \code
 * 30.03.2002 22:00 -> 31.03.2002 00:00:00 (31.03.2002 01:00:00)
 * 30.03.2002 23:00 -> 31.03.2002 01:00:00 (31.03.2002 02:00:00)
 * 31.03.2002 00:00 -> 31.03.2002 02:00:00 (31.03.2002 03:00:00)
 * 31.03.2002 01:00 -> 31.03.2002 04:00:00 (31.03.2002 04:00:00)
 * 31.03.2002 02:00 -> 31.03.2002 05:00:00 (31.03.2002 05:00:00)
 * 31.03.2002 03:00 -> 31.03.2002 06:00:00 (31.03.2002 06:00:00)
 * 31.03.2002 04:00 -> 31.03.2002 07:00:00 (31.03.2002 07:00:00)
 * 
 * 26.10.2002 23:00 -> 27.10.2002 02:00:00 (27.10.2002 02:00:00)
 * 27.10.2002 00:00 -> 27.10.2002 03:00:00 (27.10.2002 03:00:00)
 * 27.10.2002 01:00 -> 27.10.2002 03:00:00 (27.10.2002 04:00:00)
 * 27.10.2002 02:00 -> 27.10.2002 04:00:00 (27.10.2002 05:00:00)
 * 27.10.2002 03:00 -> 27.10.2002 05:00:00 (27.10.2002 06:00:00)
 * \endcode
 */
// ======================================================================

#include "NFmiMetTime.h"

using namespace std;

//! The main program
int main(void)
{

#define PASKA(x) { NFmiMetTime x; cout << utc << " -> " << utc.CorrectLocalTime() << " (" << utc.LocalTime() << ")" << endl; }

  PASKA(utc(2002,3,30,22,0));
  PASKA(utc(2002,3,30,23,0));
  PASKA(utc(2002,3,31,0,0));
  PASKA(utc(2002,3,31,1,0));
  PASKA(utc(2002,3,31,2,0));
  PASKA(utc(2002,3,31,3,0));
  PASKA(utc(2002,3,31,4,0));

  cout << endl;

  PASKA(utc(2002,10,26,23,0));
  PASKA(utc(2002,10,27,0,0));
  PASKA(utc(2002,10,27,1,0));
  PASKA(utc(2002,10,27,2,0));
  PASKA(utc(2002,10,27,3,0));

  return 0;
}
// ======================================================================
